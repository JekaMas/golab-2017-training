Write your next Android app in Go
GoLab, Florence 2017

Elias Naur
elias.naur@gmail.com
@elias_naur

: Hi everyone. This training session is about at least some of the nitty-gritty details of using Go in your Android apps.

: Since this is going to be a hands-on session, I'd like to start by getting the boring details done first.

* Prerequisites

- Laptop running a 64 bit OS; Linux, macOS or Windows.
- Go 1.7 (64 bit).
- Android SDK/Android studio.
- Android NDK (64 bit), downloaded through the Android SDK manager. Command line:
   sdkmanager ndk-bundle
- A working and recent Android device or emulator.
- On a device, enable developer mode and USB debugging.

: I'd like you to go through these requirements, and make sure you've got the Android SDK or Android Studio installed in a recent version.

: Then, I'd like you to download the Android NDK for your platform, preferably through the Android SDK manager. You can access the manager inside Android Studio, or you can run the sdkmanager tool with the argument ndk-bundle. I prefer the command line tool because I don't have much experience with Android Studio.

: Let's take a few minutes for everyone to get ready.

: Please do speak up if you're stuck. The rest of this session won't be that interesting if you can't actually run your Go Android apps.

- Environment
- ANDROID_HOME should point to your Android SDK
- gomobile
    go get -u golang.org/x/mobile/cmd/...
	gomobile init

: Now, with everything installed, go get the gomobile and gobind tools through the go command.

: Then, initialize the gomobile environment with the gomobile init command.

* Training files

    git clone github.com/eliasnaur/golab-2017-training

Then, add the golab-2017-training directory to your GOPATH environment variable

: To make it easier to start, I've added a very basic Android app you can use as a starting point for your own apps.

: The project, basic, is set up to use the support library, the databinding library and finally, to use gomobile to bind your Go packages.

* The first run

Linux/macOS

    ./gradlew installDebug

Windows

    gradlew.bat installDebug

: If everything went well, you should now have a "Basic" app on your emulator or device.
